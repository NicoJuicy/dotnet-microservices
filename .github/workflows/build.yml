name: Build

on: [push]

jobs:

  build:
    name: Run Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.401
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    - name: Build .NET solution
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      run: dotnet build ./src/dotnet-microservices.sln --configuration Release

    - name: Build the apigateway Docker image
      run: docker build . --file src/services/apigateway/Dockerfile --tag apigateway:${{ matrix.os }}-${{ github.sha }}

    - name: Build the deliveries Docker image
      run: docker build . --file src/services/deliveries/Dockerfile --tag deliveries:${{ matrix.os }}-${{ github.sha }}

    - name: Build the ordering Docker image
      run: docker build . --file src/services/ordering/Dockerfile --tag ordering:${{ matrix.os }}-${{ github.sha }}

    - name: Validate docker-compose-ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd compose
        chmod 0700 ./_scripts/apigateway-gen-certificate.sh
        bash ./_scripts/apigateway-gen-certificate.sh
        docker-compose config

    - name: Validate docker-compose-windows
      if: matrix.os == 'windows-latest'
      run: |
        cd compose
        ./_scripts/apigateway-gen-certificate.ps1
        docker-compose config

  sonarCloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}